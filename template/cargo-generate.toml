# Ex: https://github.com/cargo-generate/cargo-generate/blob/main/example-templates/placeholders/cargo-generate.toml
# available by default:
# -   `{{authors}}` - from your information from Cargo's configuration: `username <email>` or just plain `username`.
# -   `{{project-name}}` supplied by either passing the `--name` flag to the command or working with the interactive CLI
# -   `{{crate_name}}` - the snake_case_version of `project-name`
# -   `{{crate_type}}` either passing the `--bin` or `--lib` flag, contains either `bin` or `lib`, `--bin` is the default
# -   `{{os-arch}}` contains the current operating system and architecture ex: `linux-x86_64`
# -   `{{username}}`  borrowed from Cargo's source code, that determines your information from Cargo's configuration.
# -   `{{within_cargo_project}}` : buggy; `true` if template is a `Cargo` project: if `Cargo.toml` is present in any parent folder.
# -   `{{is_init}}` - buggy; reflects value of `--init` flag; `--init`: drop template in place

[template]
cargo_generate_version = ">=0.17.4"
ignore                 =["target", "*.swp", "*.swo"]

[conditional.'crate_type == "lib"']
ignore=["src/main.rs", ".env", "src/error.rs", "src/utils.rs", "src/cli.rs" ]

[conditional.'crate_type == "bin"']
ignore=["src/lib.rs"]

# placeholders: https://cargo-generate.github.io/cargo-generate/templates/custom_placeholders.html
[placeholders.description]
type = "string"
prompt = "What description? "

[placeholders.advanced]
type = "bool"
prompt = "Advanced configuration? "
default = false
[conditional.'!advanced']
ignore = ["tests", "benches", "APACHE2", "LICENSE-MIT"]

[conditional.'crate_type == "bin"'.placeholders] 
cli = {type = "bool", prompt = "Include cli tools? ", default = false}

[conditional.'advanced'.placeholders]
ci = {type = "bool", prompt = "Include ci?", default = true}
dotfiles = { type = "bool", prompt = "Include dotfiles?", default = true }
licensing = {type = "bool", prompt = "Include licensing?", default = true}
async = {type = "bool", prompt = "async?", default = false}
itests = {type = "bool", prompt = "Include integration test harness?", default = false}
benches = {type = "bool", prompt = "Include benchmark harness?", default = false}

[conditional.'!ci']
ignore = [".github"]
[conditional.'!dotfiles']
ignore = [".clippy.toml", ".gitignore", ".taplo.toml", ".rustfmt.toml"]
[conditional.'!itests']
ignore = ["tests"]
[conditional.'!benches']
ignore = ["benches"]
[conditional.'!licensing']
ignore = ["APACHE2", "LICENSE-MIT"]
[conditional.'!cli']
ignore = ["src/cli.rs"]

# run pre/post scripts with https://rhai.rs/book/
# [hooks]
# pre = ["pre-script.rhai"]
# post = [...]
# hub create and push
