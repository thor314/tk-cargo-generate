# Ex: https://github.com/cargo-generate/cargo-generate/blob/main/example-templates/placeholders/cargo-generate.toml
# available by default:
# -   `{{authors}}` - from your information from Cargo's configuration: `username <email>` or just plain `username`.
# -   `{{project-name}}` supplied by either passing the `--name` flag to the command or working with the interactive CLI
# -   `{{crate_name}}` - the snake_case_version of `project-name`
# -   `{{crate_type}}` either passing the `--bin` or `--lib` flag, contains either `bin` or `lib`, `--bin` is the default
# -   `{{os-arch}}` contains the current operating system and architecture ex: `linux-x86_64`
# -   `{{username}}`  borrowed from Cargo's source code, that determines your information from Cargo's configuration.
# -   `{{within_cargo_project}}` : buggy; `true` if template is a `Cargo` project: if `Cargo.toml` is present in any parent folder.
# -   `{{is_init}}` - buggy; reflects value of `--init` flag; `--init`: drop template in place

[template]
cargo_generate_version=">=0.10.0"
ignore                =["target"] 
# sub_templates         =["lib", "bin"]
# sub_templates         =["licensing", "github_ci", "dotfiles", "test_harness", "bench_harness", "misc", "lib", "bin"]

# placeholders: https://cargo-generate.github.io/cargo-generate/templates/custom_placeholders.html
[placeholders.description]
type = "string"
prompt = "What description? "

[placeholders.licensing]
type = "bool"
prompt = "Include licensing?"
default = true

[placeholders.ci]
type = "bool"
prompt = "Include ci?"
default = true

[placeholders.dotfiles]
type = "bool"
prompt = "Include dotfiles?"
default = true

[placeholders.integration]
type = "bool"
prompt = "Include integration test harness?"
default = false

[placeholders.bench]
type = "bool"
prompt = "Include benchmark harness?"
default = false

# conditionals: https://cargo-generate.github.io/cargo-generate/templates/conditional.html
[conditional.'crate_type == "lib"']
ignore=["src/main.rs", ".env"]
# ignore=["src/main.rs", "src/utils/cli.rs", ".env"]

[conditional.'crate_type == "bin"']
ignore=["lib.rs"]
# [conditional.'crate_type == "bin"'.placeholders]
# cli = { type = "bool", prompt = "include cli tools?", default = false }

# run pre/post scripts with https://rhai.rs/book/
# [hooks]
# pre = ["pre-script.rhai"]
# post = [...]
# hub create and push
